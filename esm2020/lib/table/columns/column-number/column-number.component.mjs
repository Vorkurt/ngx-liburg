import { Component, Input } from '@angular/core';
import { BaseColumn } from '../../base-column';
import { FormControl } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/material/input";
import * as i5 from "@angular/material/table";
export class ColumnNumberComponent extends BaseColumn {
    constructor() {
        super(...arguments);
        this.editRow = false;
        this.textValidator = new FormControl();
    }
    changeEntity(element) {
        this.textValidator.valueChanges.subscribe((resp) => {
            console.log(resp);
        });
    }
}
ColumnNumberComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ColumnNumberComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ColumnNumberComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: ColumnNumberComponent, selector: "elix-column-number", inputs: { editRow: "editRow" }, providers: [{ provide: BaseColumn, useExisting: ColumnNumberComponent }], usesInheritance: true, ngImport: i0, template: "<ng-container [matColumnDef]=\"field\">\n  <mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef>\n    {{ name }}\n  </mat-header-cell>\n  <mat-cell [class]=\"className\" mat-cell *matCellDef=\"let element\">\n    <mat-form-field\n      appearance=\"outline\"\n      *ngIf=\"element.editable && editRow; else prettyText\"\n      class=\"column-text__edit\"\n    >\n      <input\n        type=\"number\"\n        [(ngModel)]=\"element.model[field]\"\n        matInput\n        (ngModelChange)=\"changeEntity(element)\"\n      />\n    </mat-form-field>\n    <ng-template #prettyText>\n      {{ element.model[field] }}\n    </ng-template>\n  </mat-cell>\n  <mat-footer-cell *matFooterCellDef>\n    {{ footerMessage }}\n  </mat-footer-cell>\n</ng-container>\n", styles: [""], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i3.MatFormField, selector: "mat-form-field", inputs: ["color", "appearance", "hideRequiredMarker", "hintLabel", "floatLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i4.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "directive", type: i5.MatHeaderCellDef, selector: "[matHeaderCellDef]" }, { kind: "directive", type: i5.MatColumnDef, selector: "[matColumnDef]", inputs: ["sticky", "matColumnDef"] }, { kind: "directive", type: i5.MatCellDef, selector: "[matCellDef]" }, { kind: "directive", type: i5.MatFooterCellDef, selector: "[matFooterCellDef]" }, { kind: "directive", type: i5.MatHeaderCell, selector: "mat-header-cell, th[mat-header-cell]" }, { kind: "directive", type: i5.MatCell, selector: "mat-cell, td[mat-cell]" }, { kind: "directive", type: i5.MatFooterCell, selector: "mat-footer-cell, td[mat-footer-cell]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ColumnNumberComponent, decorators: [{
            type: Component,
            args: [{ selector: 'elix-column-number', providers: [{ provide: BaseColumn, useExisting: ColumnNumberComponent }], template: "<ng-container [matColumnDef]=\"field\">\n  <mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef>\n    {{ name }}\n  </mat-header-cell>\n  <mat-cell [class]=\"className\" mat-cell *matCellDef=\"let element\">\n    <mat-form-field\n      appearance=\"outline\"\n      *ngIf=\"element.editable && editRow; else prettyText\"\n      class=\"column-text__edit\"\n    >\n      <input\n        type=\"number\"\n        [(ngModel)]=\"element.model[field]\"\n        matInput\n        (ngModelChange)=\"changeEntity(element)\"\n      />\n    </mat-form-field>\n    <ng-template #prettyText>\n      {{ element.model[field] }}\n    </ng-template>\n  </mat-cell>\n  <mat-footer-cell *matFooterCellDef>\n    {{ footerMessage }}\n  </mat-footer-cell>\n</ng-container>\n" }]
        }], propDecorators: { editRow: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLW51bWJlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtbGlidXJnL3NyYy9saWIvdGFibGUvY29sdW1ucy9jb2x1bW4tbnVtYmVyL2NvbHVtbi1udW1iZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWxpYnVyZy9zcmMvbGliL3RhYmxlL2NvbHVtbnMvY29sdW1uLW51bWJlci9jb2x1bW4tbnVtYmVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7Ozs7QUFRN0MsTUFBTSxPQUFPLHFCQUF5QixTQUFRLFVBQVU7SUFOeEQ7O1FBU1MsWUFBTyxHQUFZLEtBQUssQ0FBQztRQUVoQyxrQkFBYSxHQUFnQixJQUFJLFdBQVcsRUFBRSxDQUFDO0tBVWhEO0lBTEMsWUFBWSxDQUFDLE9BQVk7UUFDdkIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7WUFDakQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNwQixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7O2tIQWRVLHFCQUFxQjtzR0FBckIscUJBQXFCLDZFQUZyQixDQUFDLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUscUJBQXFCLEVBQUUsQ0FBQyxpRENSMUUsd3dCQXlCQTsyRkRmYSxxQkFBcUI7a0JBTmpDLFNBQVM7K0JBQ0Usb0JBQW9CLGFBR25CLENBQUMsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsdUJBQXVCLEVBQUUsQ0FBQzs4QkFLakUsT0FBTztzQkFGYixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlQ29sdW1uIH0gZnJvbSAnLi4vLi4vYmFzZS1jb2x1bW4nO1xuaW1wb3J0IHsgRm9ybUNvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2VsaXgtY29sdW1uLW51bWJlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb2x1bW4tbnVtYmVyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vY29sdW1uLW51bWJlci5jb21wb25lbnQuc2NzcyddLFxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IEJhc2VDb2x1bW4sIHVzZUV4aXN0aW5nOiBDb2x1bW5OdW1iZXJDb21wb25lbnQgfV0sXG59KVxuZXhwb3J0IGNsYXNzIENvbHVtbk51bWJlckNvbXBvbmVudDxUPiBleHRlbmRzIEJhc2VDb2x1bW4ge1xuICBASW5wdXQoKVxuICAvLyBAdHMtaWdub3JlXG4gIHB1YmxpYyBlZGl0Um93OiBib29sZWFuID0gZmFsc2U7XG5cbiAgdGV4dFZhbGlkYXRvcjogRm9ybUNvbnRyb2wgPSBuZXcgRm9ybUNvbnRyb2woKTtcblxuICAvLyBAdHMtaWdub3JlXG4gIG5vbk51bWJlcjogYm9vbGVhbjtcblxuICBjaGFuZ2VFbnRpdHkoZWxlbWVudDogYW55KSB7XG4gICAgdGhpcy50ZXh0VmFsaWRhdG9yLnZhbHVlQ2hhbmdlcy5zdWJzY3JpYmUoKHJlc3ApID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKHJlc3ApO1xuICAgIH0pO1xuICB9XG59XG4iLCI8bmctY29udGFpbmVyIFttYXRDb2x1bW5EZWZdPVwiZmllbGRcIj5cbiAgPG1hdC1oZWFkZXItY2VsbCBbY2xhc3NdPVwiY2xhc3NOYW1lXCIgbWF0LWhlYWRlci1jZWxsICptYXRIZWFkZXJDZWxsRGVmPlxuICAgIHt7IG5hbWUgfX1cbiAgPC9tYXQtaGVhZGVyLWNlbGw+XG4gIDxtYXQtY2VsbCBbY2xhc3NdPVwiY2xhc3NOYW1lXCIgbWF0LWNlbGwgKm1hdENlbGxEZWY9XCJsZXQgZWxlbWVudFwiPlxuICAgIDxtYXQtZm9ybS1maWVsZFxuICAgICAgYXBwZWFyYW5jZT1cIm91dGxpbmVcIlxuICAgICAgKm5nSWY9XCJlbGVtZW50LmVkaXRhYmxlICYmIGVkaXRSb3c7IGVsc2UgcHJldHR5VGV4dFwiXG4gICAgICBjbGFzcz1cImNvbHVtbi10ZXh0X19lZGl0XCJcbiAgICA+XG4gICAgICA8aW5wdXRcbiAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgIFsobmdNb2RlbCldPVwiZWxlbWVudC5tb2RlbFtmaWVsZF1cIlxuICAgICAgICBtYXRJbnB1dFxuICAgICAgICAobmdNb2RlbENoYW5nZSk9XCJjaGFuZ2VFbnRpdHkoZWxlbWVudClcIlxuICAgICAgLz5cbiAgICA8L21hdC1mb3JtLWZpZWxkPlxuICAgIDxuZy10ZW1wbGF0ZSAjcHJldHR5VGV4dD5cbiAgICAgIHt7IGVsZW1lbnQubW9kZWxbZmllbGRdIH19XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgPC9tYXQtY2VsbD5cbiAgPG1hdC1mb290ZXItY2VsbCAqbWF0Rm9vdGVyQ2VsbERlZj5cbiAgICB7eyBmb290ZXJNZXNzYWdlIH19XG4gIDwvbWF0LWZvb3Rlci1jZWxsPlxuPC9uZy1jb250YWluZXI+XG4iXX0=