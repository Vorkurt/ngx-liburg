import { Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';
import { BaseColumn } from "../../base-column";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/material/table";
import * as i4 from "@angular/material/slide-toggle";
var SelectEnum;
(function (SelectEnum) {
    SelectEnum["TRUE"] = "true";
    SelectEnum["FALSE"] = "false";
})(SelectEnum || (SelectEnum = {}));
export class ColumnTwoCasesComponent extends BaseColumn {
    constructor() {
        super(...arguments);
        this.onValueChanges = new EventEmitter();
        this.chosenList = [{ value: SelectEnum.FALSE, view: 'False' }, { value: SelectEnum.TRUE, view: 'True' }];
    }
    ngOnInit() {
    }
    changeValue() {
    }
    changeEntity(param) {
        console.log(param);
    }
}
ColumnTwoCasesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ColumnTwoCasesComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ColumnTwoCasesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: ColumnTwoCasesComponent, selector: "elix-column-two-cases", outputs: { onValueChanges: "onValueChanges" }, providers: [{ provide: BaseColumn, useExisting: ColumnTwoCasesComponent }], usesInheritance: true, ngImport: i0, template: "<ng-container [matColumnDef]=\"field\">\n  <mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef>\n    {{name}}\n  </mat-header-cell>\n  <mat-cell [class]=\"className\" mat-cell *matCellDef=\"let element\">\n\n      <mat-slide-toggle *ngIf=\"element.editable && editRow; else prettyText\"  [(ngModel)]=\"element.model[field]\" ></mat-slide-toggle>\n      <ng-template #prettyText>\n      {{ element.model[field] }}\n    </ng-template>\n  </mat-cell>\n</ng-container>\n", styles: [""], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i3.MatHeaderCellDef, selector: "[matHeaderCellDef]" }, { kind: "directive", type: i3.MatColumnDef, selector: "[matColumnDef]", inputs: ["sticky", "matColumnDef"] }, { kind: "directive", type: i3.MatCellDef, selector: "[matCellDef]" }, { kind: "directive", type: i3.MatHeaderCell, selector: "mat-header-cell, th[mat-header-cell]" }, { kind: "directive", type: i3.MatCell, selector: "mat-cell, td[mat-cell]" }, { kind: "component", type: i4.MatSlideToggle, selector: "mat-slide-toggle", inputs: ["disabled", "disableRipple", "color", "tabIndex"], exportAs: ["matSlideToggle"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ColumnTwoCasesComponent, decorators: [{
            type: Component,
            args: [{ selector: 'elix-column-two-cases', encapsulation: ViewEncapsulation.None, providers: [{ provide: BaseColumn, useExisting: ColumnTwoCasesComponent }], template: "<ng-container [matColumnDef]=\"field\">\n  <mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef>\n    {{name}}\n  </mat-header-cell>\n  <mat-cell [class]=\"className\" mat-cell *matCellDef=\"let element\">\n\n      <mat-slide-toggle *ngIf=\"element.editable && editRow; else prettyText\"  [(ngModel)]=\"element.model[field]\" ></mat-slide-toggle>\n      <ng-template #prettyText>\n      {{ element.model[field] }}\n    </ng-template>\n  </mat-cell>\n</ng-container>\n" }]
        }], propDecorators: { onValueChanges: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLXR3by1jYXNlcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtbGlidXJnL3NyYy9saWIvdGFibGUvY29sdW1ucy9jb2x1bW4tdHdvLWNhc2VzL2NvbHVtbi10d28tY2FzZXMuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWxpYnVyZy9zcmMvbGliL3RhYmxlL2NvbHVtbnMvY29sdW1uLXR3by1jYXNlcy9jb2x1bW4tdHdvLWNhc2VzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFVLE1BQU0sRUFBRSxpQkFBaUIsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6RixPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7Ozs7OztBQUc3QyxJQUFLLFVBR0o7QUFIRCxXQUFLLFVBQVU7SUFDYiwyQkFBWSxDQUFBO0lBQ1osNkJBQWMsQ0FBQTtBQUNoQixDQUFDLEVBSEksVUFBVSxLQUFWLFVBQVUsUUFHZDtBQVNELE1BQU0sT0FBTyx1QkFBMkIsU0FBUSxVQUFVO0lBUDFEOztRQVNTLG1CQUFjLEdBQ1osSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUVyQixlQUFVLEdBQTZDLENBQUMsRUFBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFDLEVBQUUsRUFBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFDLENBQUMsQ0FBQTtLQVdqSjtJQVRRLFFBQVE7SUFDZixDQUFDO0lBRU0sV0FBVztJQUNsQixDQUFDO0lBRU0sWUFBWSxDQUFDLEtBQXFEO1FBQ3ZFLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUE7SUFDcEIsQ0FBQzs7b0hBZlUsdUJBQXVCO3dHQUF2Qix1QkFBdUIsK0ZBRlosQ0FBQyxFQUFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLHVCQUF1QixFQUFDLENBQUMsaURDZHJGLHllQVlBOzJGRElhLHVCQUF1QjtrQkFQbkMsU0FBUzsrQkFDa0IsdUJBQXVCLGlCQUd2QixpQkFBaUIsQ0FBQyxJQUFJLGFBQzFCLENBQUMsRUFBQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcseUJBQXlCLEVBQUMsQ0FBQzs4QkFJNUUsY0FBYztzQkFEcEIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIE9uSW5pdCwgT3V0cHV0LCBWaWV3RW5jYXBzdWxhdGlvbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Jhc2VDb2x1bW59IGZyb20gXCIuLi8uLi9iYXNlLWNvbHVtblwiO1xuaW1wb3J0IHtEYXRhU291cmNlTWF0ZXJpYWxUYWJsZX0gZnJvbSBcIi4uLy4uL3RhYmxlL3RhYmxlLmNvbXBvbmVudFwiO1xuXG5lbnVtIFNlbGVjdEVudW0ge1xuICBUUlVFPSAndHJ1ZScsXG4gIEZBTFNFPSAnZmFsc2UnXG59XG5cbkBDb21wb25lbnQoe1xuICAgICAgICAgICAgIHNlbGVjdG9yICAgICA6ICdlbGl4LWNvbHVtbi10d28tY2FzZXMnLFxuICAgICAgICAgICAgIHRlbXBsYXRlVXJsICA6ICcuL2NvbHVtbi10d28tY2FzZXMuY29tcG9uZW50Lmh0bWwnLFxuICAgICAgICAgICAgIHN0eWxlVXJscyAgICA6IFsnLi9jb2x1bW4tdHdvLWNhc2VzLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgICAgICAgICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICAgICAgICAgICAgcHJvdmlkZXJzOlt7cHJvdmlkZTogQmFzZUNvbHVtbiwgdXNlRXhpc3Rpbmc6IENvbHVtblR3b0Nhc2VzQ29tcG9uZW50fV1cbiAgICAgICAgICAgfSlcbmV4cG9ydCBjbGFzcyBDb2x1bW5Ud29DYXNlc0NvbXBvbmVudDxUPiBleHRlbmRzIEJhc2VDb2x1bW4gaW1wbGVtZW50cyBPbkluaXQge1xuICBAT3V0cHV0KClcbiAgcHVibGljIG9uVmFsdWVDaGFuZ2VzIDogRXZlbnRFbWl0dGVyPERhdGFTb3VyY2VNYXRlcmlhbFRhYmxlPFQ+PiA9XG4gICAgICAgICAgIG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBwdWJsaWMgY2hvc2VuTGlzdDogQXJyYXk8e3ZhbHVlOiBTZWxlY3RFbnVtLCB2aWV3OiBzdHJpbmd9PiA9IFt7dmFsdWU6IFNlbGVjdEVudW0uRkFMU0UsIHZpZXc6ICdGYWxzZSd9LCB7dmFsdWU6IFNlbGVjdEVudW0uVFJVRSwgdmlldzogJ1RydWUnfV1cblxuICBwdWJsaWMgbmdPbkluaXQoKSA6IHZvaWQge1xuICB9XG5cbiAgcHVibGljIGNoYW5nZVZhbHVlKCkge1xuICB9XG5cbiAgcHVibGljIGNoYW5nZUVudGl0eShwYXJhbSA6IHtjaGFuZ2UgOiB7ZGF0YSA6IHN0cmluZzsgZGF0YUNoYW5nZWQgOiBhbnl9fSkgOiB2b2lkIHtcbiAgICBjb25zb2xlLmxvZyhwYXJhbSlcbiAgfVxufVxuIiwiPG5nLWNvbnRhaW5lciBbbWF0Q29sdW1uRGVmXT1cImZpZWxkXCI+XG4gIDxtYXQtaGVhZGVyLWNlbGwgW2NsYXNzXT1cImNsYXNzTmFtZVwiIG1hdC1oZWFkZXItY2VsbCAqbWF0SGVhZGVyQ2VsbERlZj5cbiAgICB7e25hbWV9fVxuICA8L21hdC1oZWFkZXItY2VsbD5cbiAgPG1hdC1jZWxsIFtjbGFzc109XCJjbGFzc05hbWVcIiBtYXQtY2VsbCAqbWF0Q2VsbERlZj1cImxldCBlbGVtZW50XCI+XG5cbiAgICAgIDxtYXQtc2xpZGUtdG9nZ2xlICpuZ0lmPVwiZWxlbWVudC5lZGl0YWJsZSAmJiBlZGl0Um93OyBlbHNlIHByZXR0eVRleHRcIiAgWyhuZ01vZGVsKV09XCJlbGVtZW50Lm1vZGVsW2ZpZWxkXVwiID48L21hdC1zbGlkZS10b2dnbGU+XG4gICAgICA8bmctdGVtcGxhdGUgI3ByZXR0eVRleHQ+XG4gICAgICB7eyBlbGVtZW50Lm1vZGVsW2ZpZWxkXSB9fVxuICAgIDwvbmctdGVtcGxhdGU+XG4gIDwvbWF0LWNlbGw+XG48L25nLWNvbnRhaW5lcj5cbiJdfQ==