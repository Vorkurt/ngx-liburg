import { animate, state, style, transition, trigger } from '@angular/animations';
import { moveItemInArray } from "@angular/cdk/drag-drop";
import { Component, ContentChildren, EventEmitter, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';
import { MatPaginator } from '@angular/material/paginator';
import { MatTable } from '@angular/material/table';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { BaseColumn } from '../base-column';
import * as i0 from "@angular/core";
import * as i1 from "./table.service";
import * as i2 from "../columns/service/column-rotate.service";
import * as i3 from "@angular/common";
import * as i4 from "@angular/material/icon";
import * as i5 from "@angular/material/table";
import * as i6 from "@angular/material/paginator";
import * as i7 from "@angular/cdk/drag-drop";
export class TableComponent {
    constructor(_tableState, _columnRotate, _changeDetectorRef) {
        this._tableState = _tableState;
        this._columnRotate = _columnRotate;
        this._changeDetectorRef = _changeDetectorRef;
        this.extensible = false;
        // Footer
        this.footerShow = false;
        // class for footer
        this.footerMessageClass = '';
        // flag about if we want to show pagination
        this.showPagination = false;
        this.addedNewEntry = false;
        this.onAddEntry = new EventEmitter();
        this.onPaginationChange = new EventEmitter();
        this.filterTooltip = true;
        this.columnsToDispaly = [];
        this.doubleColumnToDisplay = [];
        // for avoid memory leak
        this._destroyed = new Subject();
    }
    ngAfterViewInit() {
        this.columnsToDispaly = this.columnDefs.map((resp) => resp.columnDef.name);
        this.columnDefs
            .map((resp) => resp.columnDef)
            .forEach((rep) => this.table.addColumnDef(rep));
        this._columnRotate.rotate$.pipe(takeUntil(this._destroyed)).subscribe((side) => {
            if (side.includes('left')) {
                this.rotateColumn('left');
            }
            else {
                this.rotateColumn('right');
            }
        });
        try {
            const duplicate = this.columnsToDispaly.filter((columnDisplay, index, self) => index === self.findIndex((value) => value === columnDisplay));
            this.doubleColumnToDisplay = this.columnsToDispaly;
            this._setColumnForLayout();
            if (duplicate.length < this.columnsToDispaly.length) {
                throw new Error('You duplicate value what you want to display, Please look in definitions at columns');
            }
        }
        catch (err) {
            console.error(err);
        }
        this._changeDetectorRef.detectChanges();
    }
    addNewEntry() {
        this.onAddEntry.next(true);
    }
    changePage(event) {
        this.onPaginationChange.emit(event);
    }
    drop(event) {
        moveItemInArray(this.dataSource, event.previousIndex, event.currentIndex);
        this.table.renderRows();
    }
    rotateColumn(side) {
        if (side === 'left') {
            this._rotateLeft();
        }
        else {
            this._rotateRight();
        }
        this.columnsToDispaly = [...this.doubleColumnToDisplay.slice(0, this.columnsToDispaly.length - 1), 'action'];
    }
    _rotateLeft() {
        const intermediateColumn = this.doubleColumnToDisplay[0];
        this.doubleColumnToDisplay.forEach((column, index) => {
            this.doubleColumnToDisplay[index] = this.doubleColumnToDisplay[index + 1];
        });
        this.doubleColumnToDisplay[this.doubleColumnToDisplay.length - 1] = intermediateColumn;
        this._columnRotate.swapColumn(this.doubleColumnToDisplay);
    }
    _rotateRight() {
        const intermediateColumn = this.doubleColumnToDisplay[this.doubleColumnToDisplay.length - 2];
        for (let i = this.doubleColumnToDisplay.length - 2; i > 0; i--) {
            this.doubleColumnToDisplay[i] = this.doubleColumnToDisplay[i - 1];
        }
        this.doubleColumnToDisplay[0] = intermediateColumn;
    }
    _setColumnForLayout() {
        this._tableState.responsive(this.columnsToDispaly, this.doubleColumnToDisplay);
        this._tableState.columnDisplay$.pipe(takeUntil(this._destroyed)).subscribe(columns => {
            this.columnsToDispaly = columns;
        });
    }
    ngOnDestroy() {
        this._destroyed.next();
        this._destroyed.complete();
    }
}
TableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TableComponent, deps: [{ token: i1.TableService }, { token: i2.ColumnRotateService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
TableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: TableComponent, selector: "elix-table", inputs: { dataSource: "dataSource", extensible: "extensible", extandble$: "extandble$", footerShow: "footerShow", footerMessageClass: "footerMessageClass", newElementExtandble: "newElementExtandble", showPagination: "showPagination", lenghtPagination: "lenghtPagination", paginationClass: "paginationClass", addedNewEntry: "addedNewEntry", filterTooltip: "filterTooltip" }, outputs: { onAddEntry: "onAddEntry", onPaginationChange: "onPaginationChange" }, queries: [{ propertyName: "columnDefs", predicate: BaseColumn }], viewQueries: [{ propertyName: "table", first: true, predicate: MatTable, descendants: true, static: true }, { propertyName: "paginator", first: true, predicate: MatPaginator, descendants: true }], ngImport: i0, template: "<mat-table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows=\"true\" cdkDropList [cdkDropListData]=\"dataSource\"\n           [ngStyle]=\"{'box-shadow': addedNewEntry ? 'none': ''}\"\n           (cdkDropListDropped)=\"drop($event)\">\n  <ng-content></ng-content>\n  <mat-header-row\n    class=\"header-color gap-1\"\n    mat-header-row\n    *matHeaderRowDef=\"columnsToDispaly; sticky: true\"\n  >\n  </mat-header-row>\n  <mat-row\n    mat-row\n    cdkDrag\n    *matRowDef=\"let row; columns: columnsToDispaly\"\n    class=\"gap-1 header-border-left\"\n  ></mat-row>\n  <!-- Footer for tabel -->\n  <ng-container *ngIf=\"footerShow\">\n    <mat-footer-row\n      [class]=\"footerMessageClass\"\n      *matFooterRowDef=\"columnsToDispaly\"\n      [attr.colspan]=\"columnsToDispaly.length\"\n    >\n    </mat-footer-row>\n  </ng-container>\n\n  <!--  Extanble-->\n  <ng-container *ngIf=\"extensible\">\n    <ng-container matColumnDef=\"extensibleData\">\n      <mat-cell\n        *matCellDef=\"let element\"\n        [attr.colspan]=\"columnsToDispaly.length\"\n        class=\"overflow-hidden\"\n      >\n        <div\n          [@detailExpand]=\"\n            element === (extandble$ | async) ? 'expanded' : 'collapsed'\n          \"\n          class=\"elix__table\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"\n              newElementExtandble;\n              context: { $implicit: element }\n            \"\n          >\n          </ng-container>\n        </div>\n      </mat-cell>\n    </ng-container>\n\n    <mat-row\n      *matRowDef=\"let row; columns: ['extensibleData']\"\n      class=\"example-detail-row gap-1 header-border-left\"\n    ></mat-row>\n  </ng-container>\n</mat-table>\n<div class=\"new\" *ngIf=\"addedNewEntry\" (click)=\"addNewEntry()\">\n  <mat-icon\n    [svgIcon]=\"'fa_solid:circle-plus'\"\n    class=\"new-entry\"\n  ></mat-icon>\n  <div>\n    <p>Added new Entry</p>\n  </div>\n\n</div>\n<mat-paginator\n  [class]=\"paginationClass\"\n  *ngIf=\"showPagination\"\n  (page)=\"changePage($event)\"\n  [length]=\"lenghtPagination\"\n  [pageSizeOptions]=\"[10, 20, 50]\"\n  showFirstLastButtons\n  aria-label=\"Select page of periodic elements\"\n>\n</mat-paginator>\n", styles: ["elix-table{transition:all .5s ease-in}elix-table mat-table{color:transparent;border-collapse:collapse;border-radius:.5rem;overflow:hidden;box-shadow:#00000026 0 15px 25px,#0000000d 0 5px 10px}elix-table .header-border-left{border-left:1px solid}elix-table mat-header-row mat-header-cell{justify-content:flex-start;border-spacing:2rem}elix-table mat-row{box-shadow:#0366d64d 0 0 0 3px;transition:all ease-in-out .1s;min-height:32px;border:.2px solid;position:relative;height:max-content}elix-table mat-row textarea{outline:none}elix-table mat-row:hover{background:rgba(1,1,222,.1)}elix-table mat-row mat-cell{justify-content:flex-start;position:relative;min-height:1rem;color:#000}elix-table mat-row mat-cell mat-form-field div{padding:0!important;border:0!important}elix-table mat-row mat-cell mat-form-field div input{border:1px solid;box-shadow:inset 0 0 3px 1px #00f3}elix-table mat-row mat-cell textarea{background:inherit;height:1.95rem}elix-table mat-row mat-cell textarea:focus-visible{outline:none;border:1px solid var(--primary-color-input)}elix-table mat-row mat-cell button{padding:0!important;min-width:auto!important}elix-table mat-header-row{min-height:1.5rem}elix-table mat-header-row mat-header-cell{min-height:inherit}elix-table mat-header-cell{color:#fff!important}elix-table .header-color{background:#2d333b;z-index:99!important}elix-table .mat-form-field-infix{width:auto}elix-table .example-detail-row{min-height:0!important}elix-table .example-detail-row mat-cell{min-height:inherit}elix-table .example-detail-row mat-cell .mat-form-field-infix{width:auto!important}.cdk-drop-list-dragging .cdk-drag{transition:transform .35s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{z-index:200;background-color:#fff;border:1px solid #5f7651;box-shadow:#32325d40 0 6px 12px -2px,#0000004d 0 3px 7px -3px}.cdk-drag-animating{transition:transform .35s cubic-bezier(0,0,.2,1)}.new{display:flex;align-items:center;padding:1rem 0 1rem .5rem}.new-entry{color:#52796f!important;padding-right:.5rem}\n"], dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i3.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "component", type: i4.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "component", type: i5.MatTable, selector: "mat-table, table[mat-table]", exportAs: ["matTable"] }, { kind: "directive", type: i5.MatHeaderRowDef, selector: "[matHeaderRowDef]", inputs: ["matHeaderRowDef", "matHeaderRowDefSticky"] }, { kind: "directive", type: i5.MatColumnDef, selector: "[matColumnDef]", inputs: ["sticky", "matColumnDef"] }, { kind: "directive", type: i5.MatCellDef, selector: "[matCellDef]" }, { kind: "directive", type: i5.MatRowDef, selector: "[matRowDef]", inputs: ["matRowDefColumns", "matRowDefWhen"] }, { kind: "directive", type: i5.MatFooterRowDef, selector: "[matFooterRowDef]", inputs: ["matFooterRowDef", "matFooterRowDefSticky"] }, { kind: "directive", type: i5.MatCell, selector: "mat-cell, td[mat-cell]" }, { kind: "component", type: i5.MatHeaderRow, selector: "mat-header-row, tr[mat-header-row]", exportAs: ["matHeaderRow"] }, { kind: "component", type: i5.MatRow, selector: "mat-row, tr[mat-row]", exportAs: ["matRow"] }, { kind: "component", type: i5.MatFooterRow, selector: "mat-footer-row, tr[mat-footer-row]", exportAs: ["matFooterRow"] }, { kind: "component", type: i6.MatPaginator, selector: "mat-paginator", inputs: ["disabled"], exportAs: ["matPaginator"] }, { kind: "directive", type: i7.CdkDropList, selector: "[cdkDropList], cdk-drop-list", inputs: ["cdkDropListConnectedTo", "cdkDropListData", "cdkDropListOrientation", "id", "cdkDropListLockAxis", "cdkDropListDisabled", "cdkDropListSortingDisabled", "cdkDropListEnterPredicate", "cdkDropListSortPredicate", "cdkDropListAutoScrollDisabled", "cdkDropListAutoScrollStep"], outputs: ["cdkDropListDropped", "cdkDropListEntered", "cdkDropListExited", "cdkDropListSorted"], exportAs: ["cdkDropList"] }, { kind: "directive", type: i7.CdkDrag, selector: "[cdkDrag]", inputs: ["cdkDragData", "cdkDragLockAxis", "cdkDragRootElement", "cdkDragBoundary", "cdkDragStartDelay", "cdkDragFreeDragPosition", "cdkDragDisabled", "cdkDragConstrainPosition", "cdkDragPreviewClass", "cdkDragPreviewContainer"], outputs: ["cdkDragStarted", "cdkDragReleased", "cdkDragEnded", "cdkDragEntered", "cdkDragExited", "cdkDragDropped", "cdkDragMoved"], exportAs: ["cdkDrag"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }], animations: [
        trigger('detailExpand', [
            state('collapsed', style({
                height: '0px',
                minHeight: '0'
            })),
            state('expanded', style({ height: '*' })),
            transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),
        ]),
    ], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TableComponent, decorators: [{
            type: Component,
            args: [{ selector: 'elix-table', animations: [
                        trigger('detailExpand', [
                            state('collapsed', style({
                                height: '0px',
                                minHeight: '0'
                            })),
                            state('expanded', style({ height: '*' })),
                            transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),
                        ]),
                    ], encapsulation: ViewEncapsulation.None, template: "<mat-table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows=\"true\" cdkDropList [cdkDropListData]=\"dataSource\"\n           [ngStyle]=\"{'box-shadow': addedNewEntry ? 'none': ''}\"\n           (cdkDropListDropped)=\"drop($event)\">\n  <ng-content></ng-content>\n  <mat-header-row\n    class=\"header-color gap-1\"\n    mat-header-row\n    *matHeaderRowDef=\"columnsToDispaly; sticky: true\"\n  >\n  </mat-header-row>\n  <mat-row\n    mat-row\n    cdkDrag\n    *matRowDef=\"let row; columns: columnsToDispaly\"\n    class=\"gap-1 header-border-left\"\n  ></mat-row>\n  <!-- Footer for tabel -->\n  <ng-container *ngIf=\"footerShow\">\n    <mat-footer-row\n      [class]=\"footerMessageClass\"\n      *matFooterRowDef=\"columnsToDispaly\"\n      [attr.colspan]=\"columnsToDispaly.length\"\n    >\n    </mat-footer-row>\n  </ng-container>\n\n  <!--  Extanble-->\n  <ng-container *ngIf=\"extensible\">\n    <ng-container matColumnDef=\"extensibleData\">\n      <mat-cell\n        *matCellDef=\"let element\"\n        [attr.colspan]=\"columnsToDispaly.length\"\n        class=\"overflow-hidden\"\n      >\n        <div\n          [@detailExpand]=\"\n            element === (extandble$ | async) ? 'expanded' : 'collapsed'\n          \"\n          class=\"elix__table\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"\n              newElementExtandble;\n              context: { $implicit: element }\n            \"\n          >\n          </ng-container>\n        </div>\n      </mat-cell>\n    </ng-container>\n\n    <mat-row\n      *matRowDef=\"let row; columns: ['extensibleData']\"\n      class=\"example-detail-row gap-1 header-border-left\"\n    ></mat-row>\n  </ng-container>\n</mat-table>\n<div class=\"new\" *ngIf=\"addedNewEntry\" (click)=\"addNewEntry()\">\n  <mat-icon\n    [svgIcon]=\"'fa_solid:circle-plus'\"\n    class=\"new-entry\"\n  ></mat-icon>\n  <div>\n    <p>Added new Entry</p>\n  </div>\n\n</div>\n<mat-paginator\n  [class]=\"paginationClass\"\n  *ngIf=\"showPagination\"\n  (page)=\"changePage($event)\"\n  [length]=\"lenghtPagination\"\n  [pageSizeOptions]=\"[10, 20, 50]\"\n  showFirstLastButtons\n  aria-label=\"Select page of periodic elements\"\n>\n</mat-paginator>\n", styles: ["elix-table{transition:all .5s ease-in}elix-table mat-table{color:transparent;border-collapse:collapse;border-radius:.5rem;overflow:hidden;box-shadow:#00000026 0 15px 25px,#0000000d 0 5px 10px}elix-table .header-border-left{border-left:1px solid}elix-table mat-header-row mat-header-cell{justify-content:flex-start;border-spacing:2rem}elix-table mat-row{box-shadow:#0366d64d 0 0 0 3px;transition:all ease-in-out .1s;min-height:32px;border:.2px solid;position:relative;height:max-content}elix-table mat-row textarea{outline:none}elix-table mat-row:hover{background:rgba(1,1,222,.1)}elix-table mat-row mat-cell{justify-content:flex-start;position:relative;min-height:1rem;color:#000}elix-table mat-row mat-cell mat-form-field div{padding:0!important;border:0!important}elix-table mat-row mat-cell mat-form-field div input{border:1px solid;box-shadow:inset 0 0 3px 1px #00f3}elix-table mat-row mat-cell textarea{background:inherit;height:1.95rem}elix-table mat-row mat-cell textarea:focus-visible{outline:none;border:1px solid var(--primary-color-input)}elix-table mat-row mat-cell button{padding:0!important;min-width:auto!important}elix-table mat-header-row{min-height:1.5rem}elix-table mat-header-row mat-header-cell{min-height:inherit}elix-table mat-header-cell{color:#fff!important}elix-table .header-color{background:#2d333b;z-index:99!important}elix-table .mat-form-field-infix{width:auto}elix-table .example-detail-row{min-height:0!important}elix-table .example-detail-row mat-cell{min-height:inherit}elix-table .example-detail-row mat-cell .mat-form-field-infix{width:auto!important}.cdk-drop-list-dragging .cdk-drag{transition:transform .35s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{z-index:200;background-color:#fff;border:1px solid #5f7651;box-shadow:#32325d40 0 6px 12px -2px,#0000004d 0 3px 7px -3px}.cdk-drag-animating{transition:transform .35s cubic-bezier(0,0,.2,1)}.new{display:flex;align-items:center;padding:1rem 0 1rem .5rem}.new-entry{color:#52796f!important;padding-right:.5rem}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.TableService }, { type: i2.ColumnRotateService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { dataSource: [{
                type: Input
            }], extensible: [{
                type: Input
            }], extandble$: [{
                type: Input
            }], footerShow: [{
                type: Input
            }], footerMessageClass: [{
                type: Input
            }], newElementExtandble: [{
                type: Input
            }], showPagination: [{
                type: Input
            }], lenghtPagination: [{
                type: Input
            }], paginationClass: [{
                type: Input
            }], addedNewEntry: [{
                type: Input
            }], onAddEntry: [{
                type: Output
            }], onPaginationChange: [{
                type: Output
            }], filterTooltip: [{
                type: Input
            }], table: [{
                type: ViewChild,
                args: [MatTable, { static: true }]
            }], paginator: [{
                type: ViewChild,
                args: [MatPaginator]
            }], columnDefs: [{
                type: ContentChildren,
                args: [BaseColumn]
            }] } });
//# sourceMappingURL=data:application/json;base64,