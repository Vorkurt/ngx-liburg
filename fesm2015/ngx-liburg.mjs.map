{"version":3,"file":"ngx-liburg.mjs","sources":["../../../projects/ngx-liburg/src/lib/table/base-column.ts","../../../projects/ngx-liburg/src/lib/table/columns/column-area-text/elix-tooltip.service.ts","../../../projects/ngx-liburg/src/lib/table/tooltip/tooltip.component.ts","../../../projects/ngx-liburg/src/lib/table/tooltip/tooltip.component.html","../../../projects/ngx-liburg/src/lib/table/columns/column-area-text/column-area-text.component.ts","../../../projects/ngx-liburg/src/lib/table/columns/column-area-text/column-area-text.component.html","../../../projects/ngx-liburg/src/lib/table/columns/service/column-rotate.service.ts","../../../projects/ngx-liburg/src/lib/table/columns/column-icon-action/column-icon-action.component.ts","../../../projects/ngx-liburg/src/lib/table/columns/column-icon-action/column-icon-action.component.html","../../../projects/ngx-liburg/src/lib/table/columns/column-number/column-number.component.ts","../../../projects/ngx-liburg/src/lib/table/columns/column-number/column-number.component.html","../../../projects/ngx-liburg/src/lib/table/columns/column-select/column-select.component.ts","../../../projects/ngx-liburg/src/lib/table/columns/column-select/column-select.component.html","../../../projects/ngx-liburg/src/lib/table/columns/column-text/column-text.component.ts","../../../projects/ngx-liburg/src/lib/table/columns/column-text/column-text.component.html","../../../projects/ngx-liburg/src/lib/table/columns/column-two-cases/column-two-cases.component.ts","../../../projects/ngx-liburg/src/lib/table/columns/column-two-cases/column-two-cases.component.html","../../../projects/ngx-liburg/src/lib/table/table/table.service.ts","../../../projects/ngx-liburg/src/lib/table/table/table.component.ts","../../../projects/ngx-liburg/src/lib/table/table/table.component.html","../../../projects/ngx-liburg/src/lib/table/columns/action/action.component.ts","../../../projects/ngx-liburg/src/lib/table/columns/action/action.component.html","../../../projects/ngx-liburg/src/lib/table/table-material.module.ts","../../../projects/ngx-liburg/src/public-api.ts","../../../projects/ngx-liburg/src/ngx-liburg.ts"],"sourcesContent":["import { Component, Input, ViewChild } from '@angular/core';\nimport { MatColumnDef } from '@angular/material/table';\n\n@Component({\n  selector: 'app-base',\n  template: '',\n})\nexport abstract class BaseColumn {\n  @ViewChild(MatColumnDef)\n  // @ts-ignore\n  public columnDef: MatColumnDef;\n\n  @Input()\n  // @ts-ignore\n  public name: string;\n\n  @Input()\n  // @ts-ignore\n  public field: string;\n\n  @Input()\n  // @ts-ignore\n  public className: string;\n\n  @Input()\n  // @ts-ignore\n  public iconClass: string;\n\n  @Input()\n  public editRow: boolean = false;\n\n  @Input()\n  // @ts-ignore\n  public footerMessage: string | number | null;\n}\n","import {\n  Injectable,\n  Renderer2,\n  RendererFactory2,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { ConnectedPosition } from '@angular/cdk/overlay';\n\nexport const configOverlay = {\n  LEFT: {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'end',\n    overlayY: 'center',\n  } as ConnectedPosition,\n  RIGHT: {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'center',\n  } as ConnectedPosition,\n  TOP: {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'top',\n  } as ConnectedPosition,\n  BOTTOM: {\n    originX: 'center',\n    originY: 'top',\n    overlayX: 'center',\n    overlayY: 'bottom',\n  } as ConnectedPosition,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ElixTooltipService {\n  private _rendered2: Renderer2;\n\n  constructor(\n    private _overlay: Overlay,\n    private _rendererFactory: RendererFactory2\n  ) {\n    this._rendered2 = _rendererFactory.createRenderer(null, null);\n  }\n\n  initTooltip(\n    templateRef: TemplateRef<any>,\n    viewContainerRef: ViewContainerRef,\n    origin?: HTMLElement | any,\n    width?: number\n  ) {\n    const portalHost = new TemplatePortal(templateRef, viewContainerRef);\n\n    const overlayRef = this._overlay.create({\n      positionStrategy: this._overlay\n        .position()\n        .flexibleConnectedTo(origin)\n        .withPositions([\n          configOverlay.BOTTOM,\n          configOverlay.TOP,\n          configOverlay.LEFT,\n          configOverlay.RIGHT,\n        ]),\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      panelClass: 'vorkurt-tooltip',\n      width: width,\n    });\n    this._getConfigAtArrow(overlayRef);\n    overlayRef.attach(portalHost);\n    overlayRef.backdropClick().subscribe(() => this.close(overlayRef));\n    return overlayRef;\n  }\n\n  close(overlayRef?: any) {\n    overlayRef.detach();\n    overlayRef.dispose();\n  }\n\n  private _getConfigAtArrow(overlayRef: any) {\n    const tooltipPosition = (\n      overlayRef.getConfig()\n        .positionStrategy as FlexibleConnectedPositionStrategy\n    ).positions[0];\n    const arrow: HTMLSpanElement = this._rendered2.createElement('span');\n    arrow.classList.add('elix__arrow');\n    const tooltipHeight = <number>overlayRef.getConfig().height;\n    const tooltipWidth = overlayRef.getConfig().width;\n    switch (tooltipPosition) {\n      case configOverlay.LEFT:\n        arrow.classList.add('elix__arrow-right');\n        arrow.style.transform = 'rotate(230deg)';\n        arrow.style.top = 'calc(50% + -6.5px)';\n        arrow.style.left = 'calc(100%)';\n\n        break;\n      case configOverlay.RIGHT:\n        arrow.classList.add('elix__arrow-left');\n\n        break;\n      case configOverlay.TOP:\n        arrow.classList.add('elix__arrow-bottom');\n        arrow.style.transform = 'rotate(135deg)';\n\n        break;\n      case configOverlay.BOTTOM:\n        arrow.classList.add('elix__arrow-top');\n        arrow.style.left = '50%';\n        arrow.style.top = 'calc(100% + -15px)';\n        arrow.style.transform = 'rotate(315deg)';\n        break;\n    }\n    overlayRef.overlayElement.appendChild(arrow);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'elix-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.scss'],\n})\nexport class TooltipComponent {\n  // @ts-ignore\n  @Input() width: number;\n}\n","<div>\n  <div\n    [style.width.px]=\"width\"\n    class=\"text-white border-2 elix__shared-border-color border-solid rounded-lg m-2\"\n  >\n    <div class=\"p-2.5\">\n      <div>\n        <ng-content></ng-content>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { BaseColumn } from '../../base-column';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport {ElixTooltipService} from \"./elix-tooltip.service\";\nimport {DataSourceMaterialTable} from \"../../table/table.component\";\n\n@Component({\n  selector: 'elix-column-area-text',\n  templateUrl: './column-area-text.component.html',\n  styleUrls: ['./column-area-text.component.scss'],\n  providers: [{ provide: BaseColumn, useExisting: ColumnAreaTextComponent }],\n})\nexport class ColumnAreaTextComponent extends BaseColumn {\n  value: boolean = false;\n  vars: any;\n  // @ts-ignore\n  @ViewChild('tooltipRef') tooltipRef: TemplateRef<any>;\n  // @ts-ignore\n  tooltipOverlay: OverlayRef;\n  width: number = 400;\n\n  constructor(\n\n    private _elixTooltip: ElixTooltipService,\n    private _viewContainer: ViewContainerRef\n  ) {\n    super();\n  }\n\n  openTooltip(element: HTMLElement, model: DataSourceMaterialTable<any>) {\n    this.value = false;\n    if (!this.tooltipOverlay || !this.tooltipOverlay.hasAttached()) {\n      this.vars = model.model[this.field];\n      this.tooltipOverlay = this._elixTooltip.initTooltip(\n        this.tooltipRef,\n        this._viewContainer,\n        element,\n        this.width\n      );\n      // @ts-ignore\n      this.tooltipOverlay.backdropElement.classList.add('cursor-pointer');\n    }\n  }\n\n  closeTooltip() {\n    this.value = true;\n    this.tooltipOverlay.detach();\n    this.tooltipOverlay.dispose();\n  }\n\n  doubleClick(element: DataSourceMaterialTable<any>, value: boolean) {\n    this.value = true;\n    element.editable = value;\n  }\n}\n","<ng-container [matColumnDef]=\"field\">\n  <mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef>{{\n    name\n  }}</mat-header-cell>\n  <mat-cell\n    [class]=\"className\"\n    mat-cell\n    *matCellDef=\"let element\"\n    (click)=\"element.model['field'] !== '' && openTooltip(reference, element)\"\n    #reference\n  >\n    <textarea\n      matInput\n      [(ngModel)]=\"element.model[field]\"\n      [disabled]=\"element.editable\"\n      [ngStyle]=\"{ color: 'black' }\"\n    ></textarea>\n\n    <ng-template #tooltipRef>\n      <elix-tooltip [width]=\"width\">{{ vars }}</elix-tooltip>\n    </ng-template>\n  </mat-cell>\n  <mat-footer-cell *matFooterCellDef>\n    {{ footerMessage }}\n  </mat-footer-cell>\n</ng-container>\n","import { Injectable } from '@angular/core';\nimport { Subject } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColumnRotateService {\n\n  private readonly _rotate: Subject<string> = new Subject<string>();\n  rotate$ = this._rotate.asObservable();\n\n  setSide(position: string){\n    this._rotate.next( position)\n  }\n  public swapColumn(doubleColumnToDisplay: string[]){\n    const temporallyIndex = doubleColumnToDisplay[ doubleColumnToDisplay.length - 1 ]\n    doubleColumnToDisplay[ doubleColumnToDisplay.length - 1 ] = doubleColumnToDisplay[ doubleColumnToDisplay.length - 2 ]\n    doubleColumnToDisplay[ doubleColumnToDisplay.length - 2 ] = temporallyIndex\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { BaseColumn } from '../../base-column';\nimport { ColumnRotateService } from \"../service/column-rotate.service\";\n\n@Component({\n  selector: 'elix-column-icon-action',\n  templateUrl: './column-icon-action.component.html',\n  styleUrls: [ './column-icon-action.component.scss' ],\n  providers: [ {\n    provide: BaseColumn,\n    useExisting: ColumnIconActionComponent\n  } ],\n})\nexport class ColumnIconActionComponent extends BaseColumn {\n  @Input()\n  iconAction: boolean = false;\n\n  constructor(private readonly _columnRotate: ColumnRotateService){\n    super();\n  }\n\n  scrollColumn(left: string){\n    this._columnRotate.setSide(left)\n  }\n\n}\n","<ng-container [matColumnDef]=\"field\">\n  <mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef=\"let element\"\n  >\n    <ng-container *ngIf=\"!iconAction\">\n      {{\n      name\n      }}\n    </ng-container>\n    <ng-container *ngIf=\"iconAction\">\n      <button mat-button\n              (click)=\"scrollColumn('left')\"\n      >\n        <mat-icon\n          [svgIcon]=\"'fa_solid:arrow-left'\"\n        ></mat-icon>\n      </button>\n      <button mat-button\n              (click)=\"scrollColumn('right')\">\n        <mat-icon\n          [svgIcon]=\"'fa_solid:arrow-right'\"\n        ></mat-icon>\n      </button>\n    </ng-container>\n  </mat-header-cell>\n  <mat-cell [class]=\"className\" mat-cell *matCellDef=\"let element\">\n    <ng-container *ngIf=\"!iconAction\">\n\n      <ng-container *ngFor=\"let action of element.actions\">\n        <button\n          mat-button\n          (click)=\"action.method(element)\"\n          [class]=\"action.classCss\"\n        >\n          <mat-icon [svgIcon]=\"action.iconClass\"></mat-icon>\n        </button>\n      </ng-container>\n    </ng-container>\n  </mat-cell>\n  <mat-footer-cell *matFooterCellDef>\n    <ng-container *ngIf=\"!iconAction\">\n      {{ footerMessage }}\n    </ng-container>\n  </mat-footer-cell>\n</ng-container>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BaseColumn } from '../../base-column';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'elix-column-number',\n  templateUrl: './column-number.component.html',\n  styleUrls: ['./column-number.component.scss'],\n  providers: [{ provide: BaseColumn, useExisting: ColumnNumberComponent }],\n})\nexport class ColumnNumberComponent<T> extends BaseColumn {\n  @Input()\n  // @ts-ignore\n  public editRow: boolean = false;\n\n  textValidator: FormControl = new FormControl();\n\n  // @ts-ignore\n  nonNumber: boolean;\n\n  changeEntity(element: any) {\n    this.textValidator.valueChanges.subscribe((resp) => {\n      console.log(resp);\n    });\n  }\n}\n","<ng-container [matColumnDef]=\"field\">\n  <mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef>\n    {{ name }}\n  </mat-header-cell>\n  <mat-cell [class]=\"className\" mat-cell *matCellDef=\"let element\">\n    <mat-form-field\n      appearance=\"outline\"\n      *ngIf=\"element.editable && editRow; else prettyText\"\n      class=\"column-text__edit\"\n    >\n      <input\n        type=\"number\"\n        [(ngModel)]=\"element.model[field]\"\n        matInput\n        (ngModelChange)=\"changeEntity(element)\"\n      />\n    </mat-form-field>\n    <ng-template #prettyText>\n      {{ element.model[field] }}\n    </ng-template>\n  </mat-cell>\n  <mat-footer-cell *matFooterCellDef>\n    {{ footerMessage }}\n  </mat-footer-cell>\n</ng-container>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {BaseColumn} from \"../../base-column\";\nimport {DataSourceMaterialTable} from \"../../table/table.component\";\n\n\nexport interface ColumnSelect<T> {\n  index: number;\n  value: T;\n  name: string;\n}\n\n\n@Component({\n  selector: 'elix-column-select',\n  templateUrl: './column-select.component.html',\n  styleUrls: ['./column-select.component.scss'],\n  providers: [{ provide: BaseColumn, useExisting: ColumnSelectComponent }],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ColumnSelectComponent<T> extends BaseColumn implements OnInit {\n  @Input()\n  options?: ColumnSelect<boolean>[];\n\n  @Input()\n  truthy: boolean = false;\n  @Output()\n  public onValueChanges: EventEmitter<DataSourceMaterialTable<T>> =\n    new EventEmitter();\n\n  ngOnInit(): void {\n    if (this.options) this.options = this.options.sort();\n    if (this.truthy) {\n      this.options = [\n        { index: 1, value: true, name: 'True' },\n        { index: 0, value: false, name: 'False' },\n      ];\n    }\n  }\n\n  public changeEntity(rowElement: DataSourceMaterialTable<T>) {\n    this.onValueChanges.emit(rowElement);\n  }\n}\n","<ng-container [matColumnDef]=\"field\">\n  <mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef>\n    {{ name }}\n  </mat-header-cell>\n  <mat-cell [class]=\"className\" mat-cell *matCellDef=\"let element\">\n    <mat-form-field class=\"flex\" appearance=\"outline\">\n      {{ element.model[field].name }}\n      <mat-select\n        name=\"select\"\n        [(ngModel)]=\"element.model[field]\"\n        (ngModelChange)=\"element.model[field] = $event; changeEntity(element)\"\n      >\n        <mat-option *ngFor=\"let option of options\" [value]=\"option\">\n          {{ option.value }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </mat-cell>\n  <mat-footer-cell *matFooterCellDef>\n    {{footerMessage}}\n  </mat-footer-cell>\n</ng-container>\n","import {\n  Component,\n  EventEmitter,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BaseColumn } from '../../base-column';\n\n@Component({\n  selector: 'elix-column-text',\n  templateUrl: './column-text.component.html',\n  styleUrls: [ './column-text.component.scss' ],\n  providers: [ { provide: BaseColumn, useExisting: ColumnTextComponent } ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ColumnTextComponent<T> extends BaseColumn {\n  @Output()\n  public onValueChanges: EventEmitter<{change: unknown}> =\n    new EventEmitter();\n\n  public changeEntity(rowElement: {change: unknown}){\n    this.onValueChanges.emit(rowElement);\n  }\n}\n","<ng-container [matColumnDef]=\"field\" >\n  <mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef>\n    {{ name }}\n  </mat-header-cell>\n  <mat-cell [class]=\"className\" mat-cell *matCellDef=\"let element\">\n    <mat-form-field\n      appearance=\"outline\"\n      *ngIf=\"element.editable && editRow; else prettyText\"\n      class=\"column-text__edit\"\n    >\n      <input class=\"text-input\"\n        [(ngModel)]=\"element.model[field]\"\n        (ngModelChange)=\"element.model[field] = $event; changeEntity({change: {dataChanged: element.model[field], data: field}})\"\n        matInput\n      />\n    </mat-form-field>\n    <ng-template #prettyText>\n      <div class=\"text-disable dark:text-white\">\n      {{ element.model[field] }}\n    </div>\n    </ng-template>\n  </mat-cell>\n  <mat-footer-cell *matFooterCellDef>\n      {{footerMessage}}\n  </mat-footer-cell>\n</ng-container>\n","import {Component, EventEmitter, OnInit, Output, ViewEncapsulation} from '@angular/core';\nimport {BaseColumn} from \"../../base-column\";\nimport {DataSourceMaterialTable} from \"../../table/table.component\";\n\nenum SelectEnum {\n  TRUE= 'true',\n  FALSE= 'false'\n}\n\n@Component({\n             selector     : 'elix-column-two-cases',\n             templateUrl  : './column-two-cases.component.html',\n             styleUrls    : ['./column-two-cases.component.scss'],\n             encapsulation: ViewEncapsulation.None,\n              providers:[{provide: BaseColumn, useExisting: ColumnTwoCasesComponent}]\n           })\nexport class ColumnTwoCasesComponent<T> extends BaseColumn implements OnInit {\n  @Output()\n  public onValueChanges : EventEmitter<DataSourceMaterialTable<T>> =\n           new EventEmitter();\n\n  public chosenList: Array<{value: SelectEnum, view: string}> = [{value: SelectEnum.FALSE, view: 'False'}, {value: SelectEnum.TRUE, view: 'True'}]\n\n  public ngOnInit() : void {\n  }\n\n  public changeValue() {\n  }\n\n  public changeEntity(param : {change : {data : string; dataChanged : any}}) : void {\n    console.log(param)\n  }\n}\n","<ng-container [matColumnDef]=\"field\">\n  <mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef>\n    {{name}}\n  </mat-header-cell>\n  <mat-cell [class]=\"className\" mat-cell *matCellDef=\"let element\">\n\n      <mat-slide-toggle *ngIf=\"element.editable && editRow; else prettyText\"  [(ngModel)]=\"element.model[field]\" ></mat-slide-toggle>\n      <ng-template #prettyText>\n      {{ element.model[field] }}\n    </ng-template>\n  </mat-cell>\n</ng-container>\n","import { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { Injectable } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableService {\n  private readonly  _columnDisplay: Subject<string[]> =new Subject<string[]>()\n  columnDisplay$ = this._columnDisplay.asObservable()\n  constructor(private readonly _brPoint: BreakpointObserver,\n  ){\n  }\n\n  responsive(columnsToDisplay: string[], cloneColumn: string[]){\n    this._brPoint\n      .observe([\n        Breakpoints.XSmall,\n        Breakpoints.Small,\n        Breakpoints.Medium,\n        Breakpoints.Large,\n        Breakpoints.XLarge,\n      ])\n      .subscribe(() => {\n        if ( this._brPoint.isMatched(\n          Breakpoints.XSmall) ) {\n          columnsToDisplay = cloneColumn.filter(\n            (item, index) => {\n              return (\n                index <= 1 || index === cloneColumn.length - 1\n              );\n            },\n          );\n        } else if ( this._brPoint.isMatched(\n          Breakpoints.Small) ) {\n          columnsToDisplay = cloneColumn.filter(\n            (item, index) => {\n              return (\n                index <= 2 || index === cloneColumn.length - 1\n              );\n            },\n          );\n        } else if ( this._brPoint.isMatched(\n          Breakpoints.Medium) ) {\n          columnsToDisplay = cloneColumn.filter(\n            (item, index) => {\n              return (\n                index <= 3 || index === cloneColumn.length - 1\n              );\n            },\n          );\n        } else if ( this._brPoint.isMatched(\n          Breakpoints.Large) ) {\n          columnsToDisplay = cloneColumn.filter(\n            (item, index) => {\n              return (\n                index <= 5 || index === cloneColumn.length - 1\n              );\n            },\n          );\n        } else if ( this._brPoint.isMatched(\n          Breakpoints.XLarge) ) {\n          columnsToDisplay = cloneColumn.filter(\n            (item, index) => {\n              return (\n                index >= 0\n              );\n            },\n          );\n        }\n        this._columnDisplay.next(columnsToDisplay)\n      });\n  }\n}\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger\n} from '@angular/animations';\nimport { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatColumnDef, MatTable } from '@angular/material/table';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { BaseColumn } from '../base-column';\nimport { ColumnRotateService } from \"../columns/service/column-rotate.service\";\nimport { TableService } from \"./table.service\";\n\nexport interface IActionMaterialColumn {\n  iconClass: string;\n\n  classCss: string;\n\n  method: (row?: any) => void;\n}\n\nexport interface DataSourceMaterialTable<T> {\n  model: T;\n\n  editable: boolean;\n\n  actions: IActionMaterialColumn[];\n\n  id?: number;\n}\n\n@Component({\n  selector: 'elix-table',\n  templateUrl: './table.component.html',\n  styleUrls: [ './table.component.scss' ],\n  animations: [\n    trigger('detailExpand', [\n      state(\n        'collapsed',\n        style({\n          height: '0px',\n          minHeight: '0'\n        })),\n      state(\n        'expanded',\n        style({ height: '*' })),\n      transition(\n        'expanded <=> collapsed',\n        animate(\n          '225ms cubic-bezier(0.4, 0.0, 0.2, 1)'),\n      ),\n    ]),\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TableComponent<T> implements AfterViewInit, OnDestroy {\n  @Input()\n  // @ts-ignore\n  public dataSource: Array<DataSourceMaterialTable<T>>;\n\n  @Input()\n  public extensible: boolean = false;\n\n  @Input()\n  // @ts-ignore\n  public extandble$: BehaviorSubject<DataSourceMaterialTable<T> | null>;\n\n  // Footer\n  @Input()\n  public footerShow: boolean = false;\n\n  // class for footer\n  @Input()\n  public footerMessageClass: string = '';\n\n  // new table in row\n  @Input()\n  // @ts-ignore\n  public newElementExtandble: TemplateRef<any>;\n\n  // flag about if we want to show pagination\n  @Input()\n  public showPagination: boolean = false;\n\n  // numberOf Entry\n  @Input()\n  // @ts-ignore\n  public lenghtPagination: number;\n\n  @Input()\n  // @ts-ignore\n  public paginationClass: string;\n\n  @Input()\n  public addedNewEntry = false;\n\n  @Output() public onAddEntry: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() public onPaginationChange: EventEmitter<PageEvent> =\n    new EventEmitter<PageEvent>();\n\n\n  @Input()\n  filterTooltip: boolean = true;\n  // this is where the magic happens:\n  // @ts-ignore\n  @ViewChild(MatTable, { static: true }) table: MatTable<T>;\n\n  // @ts-ignore\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  @ContentChildren(BaseColumn)\n  // @ts-ignore\n  // after the <ng-content> has been initialized, the column definitions are available.\n  public columnDefs: QueryList<BaseColumn>;\n  public columnsToDispaly: string[] = [];\n\n  private doubleColumnToDisplay: string[] = [];\n  // for avoid memory leak\n  private _destroyed = new Subject<void>();\n\n  constructor(\n    private readonly _tableState: TableService,\n    private readonly _columnRotate: ColumnRotateService,\n    private readonly _changeDetectorRef: ChangeDetectorRef,\n  ){\n  }\n\n  public ngAfterViewInit(): void{\n    this.columnsToDispaly = this.columnDefs.map(\n      (resp: BaseColumn) => resp.columnDef.name,\n    );\n    this.columnDefs\n      .map((resp: BaseColumn) => resp.columnDef)\n      .forEach((rep: MatColumnDef) => this.table.addColumnDef(\n        rep));\n    this._columnRotate.rotate$.pipe(takeUntil(this._destroyed)).subscribe((side: string) => {\n      if (\n        side.includes('left')\n      ) {\n        this.rotateColumn('left');\n\n      } else {\n        this.rotateColumn('right');\n      }\n    })\n    try {\n      const duplicate = this.columnsToDispaly.filter(\n        (\n          columnDisplay: string,\n          index: number,\n          self: string[]) =>\n          index === self.findIndex((value: string) => value === columnDisplay),\n      );\n      this.doubleColumnToDisplay = this.columnsToDispaly;\n      this._setColumnForLayout();\n      if ( duplicate.length < this.columnsToDispaly.length ) {\n        throw new Error(\n          'You duplicate value what you want to display, Please look in definitions at columns',\n        );\n      }\n    } catch ( err ) {\n      console.error(err);\n    }\n    this._changeDetectorRef.detectChanges();\n  }\n\n  public addNewEntry(){\n    this.onAddEntry.next(true);\n  }\n\n  public changePage(event: PageEvent){\n    this.onPaginationChange.emit(event);\n  }\n\n  public drop(event: CdkDragDrop<Array<DataSourceMaterialTable<T>>>): void{\n    moveItemInArray(\n      this.dataSource,\n      event.previousIndex,\n      event.currentIndex);\n    this.table.renderRows();\n  }\n\n  private rotateColumn(side: string){\n    if ( side === 'left' ) {\n      this._rotateLeft();\n    } else {\n      this._rotateRight();\n    }\n    this.columnsToDispaly = [ ...this.doubleColumnToDisplay.slice(\n      0,\n      this.columnsToDispaly.length - 1), 'action' ]\n  }\n\n  private _rotateLeft(){\n    const intermediateColumn = this.doubleColumnToDisplay[ 0 ]\n    this.doubleColumnToDisplay.forEach((column, index) => {\n      this.doubleColumnToDisplay[ index ] = this.doubleColumnToDisplay[ index + 1 ]\n    })\n    this.doubleColumnToDisplay[ this.doubleColumnToDisplay.length - 1 ] = intermediateColumn\n    this._columnRotate.swapColumn(this.doubleColumnToDisplay);\n  }\n\n  private _rotateRight(){\n    const intermediateColumn = this.doubleColumnToDisplay[ this.doubleColumnToDisplay.length - 2 ]\n    for ( let i = this.doubleColumnToDisplay.length - 2; i > 0; i-- ) {\n      this.doubleColumnToDisplay[ i ] = this.doubleColumnToDisplay[ i - 1 ]\n    }\n    this.doubleColumnToDisplay[ 0 ] = intermediateColumn\n  }\n\n\n  private _setColumnForLayout(){\n    this._tableState.responsive(this.columnsToDispaly, this.doubleColumnToDisplay)\n    this._tableState.columnDisplay$.pipe(takeUntil(this._destroyed)).subscribe(\n      columns => {\n        this.columnsToDispaly = columns\n      })\n  }\n\n  public ngOnDestroy(){\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n}\n","<mat-table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows=\"true\" cdkDropList [cdkDropListData]=\"dataSource\"\n           [ngStyle]=\"{'box-shadow': addedNewEntry ? 'none': ''}\"\n           (cdkDropListDropped)=\"drop($event)\">\n  <ng-content></ng-content>\n  <mat-header-row\n    class=\"header-color gap-1\"\n    mat-header-row\n    *matHeaderRowDef=\"columnsToDispaly; sticky: true\"\n  >\n  </mat-header-row>\n  <mat-row\n    mat-row\n    cdkDrag\n    *matRowDef=\"let row; columns: columnsToDispaly\"\n    class=\"gap-1 header-border-left\"\n  ></mat-row>\n  <!-- Footer for tabel -->\n  <ng-container *ngIf=\"footerShow\">\n    <mat-footer-row\n      [class]=\"footerMessageClass\"\n      *matFooterRowDef=\"columnsToDispaly\"\n      [attr.colspan]=\"columnsToDispaly.length\"\n    >\n    </mat-footer-row>\n  </ng-container>\n\n  <!--  Extanble-->\n  <ng-container *ngIf=\"extensible\">\n    <ng-container matColumnDef=\"extensibleData\">\n      <mat-cell\n        *matCellDef=\"let element\"\n        [attr.colspan]=\"columnsToDispaly.length\"\n        class=\"overflow-hidden\"\n      >\n        <div\n          [@detailExpand]=\"\n            element === (extandble$ | async) ? 'expanded' : 'collapsed'\n          \"\n          class=\"elix__table\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"\n              newElementExtandble;\n              context: { $implicit: element }\n            \"\n          >\n          </ng-container>\n        </div>\n      </mat-cell>\n    </ng-container>\n\n    <mat-row\n      *matRowDef=\"let row; columns: ['extensibleData']\"\n      class=\"example-detail-row gap-1 header-border-left\"\n    ></mat-row>\n  </ng-container>\n</mat-table>\n<div class=\"new\" *ngIf=\"addedNewEntry\" (click)=\"addNewEntry()\">\n  <mat-icon\n    [svgIcon]=\"'fa_solid:circle-plus'\"\n    class=\"new-entry\"\n  ></mat-icon>\n  <div>\n    <p>Added new Entry</p>\n  </div>\n\n</div>\n<mat-paginator\n  [class]=\"paginationClass\"\n  *ngIf=\"showPagination\"\n  (page)=\"changePage($event)\"\n  [length]=\"lenghtPagination\"\n  [pageSizeOptions]=\"[10, 20, 50]\"\n  showFirstLastButtons\n  aria-label=\"Select page of periodic elements\"\n>\n</mat-paginator>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-action',\n  templateUrl: './action.component.html',\n  styleUrls: ['./action.component.scss']\n})\nexport class ActionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>action works!</p>\n","import {\n  LayoutModule\n} from '@angular/cdk/layout';\nimport {\n  CommonModule\n} from '@angular/common';\nimport {\n  NgModule\n} from '@angular/core';\nimport {\n  FormsModule\n} from '@angular/forms';\nimport {\n  MatButtonModule\n} from '@angular/material/button';\nimport {\n  MatFormFieldModule\n} from '@angular/material/form-field';\nimport {\n  MatIconModule\n} from '@angular/material/icon';\nimport {\n  MatInputModule\n} from '@angular/material/input';\nimport {\n  MatPaginatorModule\n} from '@angular/material/paginator';\nimport {\n  MatSelectModule\n} from '@angular/material/select';\nimport {\n  MatSlideToggleModule\n} from \"@angular/material/slide-toggle\";\nimport {\n  MatTableModule\n} from '@angular/material/table';\nimport {\n  ColumnAreaTextComponent\n} from './columns/column-area-text/column-area-text.component';\nimport {\n  ColumnIconActionComponent\n} from './columns/column-icon-action/column-icon-action.component';\nimport {\n  ColumnNumberComponent\n} from './columns/column-number/column-number.component';\nimport {\n  ColumnSelectComponent\n} from './columns/column-select/column-select.component';\nimport {\n  ColumnTextComponent\n} from './columns/column-text/column-text.component';\nimport {\n  ColumnTwoCasesComponent\n} from \"./columns/column-two-cases/column-two-cases.component\";\nimport {\n  TableComponent\n} from './table/table.component';\nimport {\n  TooltipComponent\n} from \"./tooltip/tooltip.component\";\nimport {\n  DragDropModule\n} from '@angular/cdk/drag-drop';\nimport { ActionComponent } from './columns/action/action.component';\n\n@NgModule({\n  declarations: [\n    TableComponent,\n    ColumnTextComponent,\n    ColumnAreaTextComponent,\n    ColumnIconActionComponent,\n    TooltipComponent,\n    ColumnNumberComponent,\n    ColumnSelectComponent,\n    ColumnTwoCasesComponent,\n    ActionComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatTableModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    LayoutModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    DragDropModule\n  ],\n  exports: [\n    TableComponent,\n    ColumnTextComponent,\n    ColumnAreaTextComponent,\n    ColumnIconActionComponent,\n    TooltipComponent,\n    ColumnNumberComponent,\n    ColumnSelectComponent,\n    ColumnTwoCasesComponent,\n  ],\n})\nexport class TableMaterialModule {\n}\n","/*\n * Public API Surface of ngx-liburg\n */\n//\n// export * from './lib/ngx-liburg.service';\n// export * from './lib/ngx-liburg.component';\n// export * from './lib/ngx-liburg.module';\n\nexport * from './lib/table/table-material.module';\nexport * from './lib/table/tooltip/tooltip.component'\nexport * from './lib/table/columns/column-number/column-number.component'\nexport * from './lib/table/columns/column-text/column-text.component'\nexport * from './lib/table/columns/column-select/column-select.component'\nexport * from './lib/table/columns/column-area-text/column-area-text.component'\nexport * from './lib/table/columns/column-area-text/elix-tooltip.service'\nexport * from './lib/table/columns/column-icon-action/column-icon-action.component'\nexport * from './lib/table/columns/column-two-cases/column-two-cases.component'\nexport * from './lib/table/base-column'\nexport * from './lib/table/table/table.component'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.ElixTooltipService","i2","i3","i6.TooltipComponent","i1.ColumnRotateService","i4","i1","i5","i1.TableService","i2.ColumnRotateService","i6"],"mappings":"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"}